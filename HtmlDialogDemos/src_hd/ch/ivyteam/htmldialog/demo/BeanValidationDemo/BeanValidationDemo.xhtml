<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"      
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui">
 
    <h:head>
        <title>Bean Validation Demo</title>
        <style type="text/css">
        	h4{margin-bottom:5px;}
        	p{margin-top:2px; margin-bottom:2px;}
        </style>
    </h:head>
<h:body>
	<ui:composition template="/PageTemplate.xhtml">

	<ui:define name="center">
		<p:layoutUnit position="center" header="Bean Validation (JSR 303) Demo">
   		<p:panel id="panel">
   			<p>This demo explains how the bean validation (JSR 303) could be used in Xpert.ivy.</p>
   	 		<p>The fields of a java class (bean) can be annotated with validation information. The validation information will then be considered by Html Dialogs when the field of the class is bound to a widget.</p>
   			<p style="margin-top:10px;">The java class <code>ch.ivyteam.htmlDialog.demo.beanValidation.Person</code> defines fields annotated with such validation information. The fields of the java class are bound to the widgets in the form bellow. 
   			There are no validation information given in the *.xhtml file of the Html Dialog itself. However, the Html Dialog uses the information given on the annotations of the fields to validate the user input.</p>
   			
   			<h4>Validation Annotations</h4>
   			<p>All annotations defined in the package javax.validation.constraints are supported. For example:</p>
   			<p:panelGrid border="1" columns="2">
				<h:outputText value="@NotNull"/>
				<h:outputText value="means that a value is required"/>
				<h:outputText value="@Size"/>
				<h:outputText value="restricts the length of a string or array or the size of a collection or map"/>
				<h:outputText value="@Max"/>
				<h:outputText value="restricts the maximum allowed value"/>
				<h:outputText value="@Min"/>
				<h:outputText value="restricts the minimum allowed value"/>
				<h:outputText value="@Pattern"/>
				<h:outputText value="restricts a string to a given regular expression"/>
				<h:outputText value="@Digits"/>
				<h:outputText value="restricts the maximum number of digits of the integer and faction part"/>
				<h:outputText value="@Future"/>
				<h:outputText value="restricts a date to the dates in the future"/>
				<h:outputText value="@Past"/>
				<h:outputText value="restricts a date to the dates in the past"/>
			</p:panelGrid>
   			<p style="margin-bottom:20px;">There will always be validation requirements, for which these standard annotation won't suffice. For these cases it is possible to create your own annotations. See the <code>@ch.ivyteam.htmldialog.demo.beanValidation.LicensePlate</code> annotation for an example.</p>
   			<h:form id="person">
   				<p:messages id="msgs"/>
				<h:panelGrid columns="3">
					<h:outputLabel value="Name" for="name"/><p:inputText value="#{data.person.name}" id="name"/><p:message for="name" display="icon" id="nameMessage"/>
					<h:outputLabel value="Social Security Number" for="socialSecurityNumber"/><p:inputText value="#{data.person.socialSecurityNumber}" id="socialSecurityNumber"/><p:message for="socialSecurityNumber" display="icon" id="socialSecurityNumberMessage"/>
					<h:outputLabel value="Year of Birth" for="yearOfBirth"/><p:inputText value="#{data.person.yearOfBirth}" id="yearOfBirth"/><p:message for="yearOfBirth" display="icon" id="yearOfBirthMessage"/>				
					<h:outputLabel value="Vehicle license" for="license"/><p:inputText value="#{data.person.vehicleLicense}" id="license"/><p:message for="license" display="icon" id="licenseMessage"/>				
				</h:panelGrid>
		    	<p:commandButton actionListener="#{logic.Send}" value="Submit" id="submit" update="person"/><br />
		    	<br/>
    	 		<h:outputLabel value="Data: #{data}"/>		    
   			</h:form>
   		</p:panel>
   		    	    		
		</p:layoutUnit>
	</ui:define>

	</ui:composition>
</h:body>
</html>