<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:ic="http://ivyteam.ch/jsf/component"
	xmlns:p="http://primefaces.org/ui"
	xmlns:jc="http://java.sun.com/jsf/composite/demo-jsfcomponents">
<!--
Note the additional xml namespace (here jc) that sets the location of the JSF composite components. 
This is 'http://java.sun.com/jsf/composite/' followed by the name of the folder
in the 'webContent/resources' where the JSF Composite Components are defined. 
-->
<h:body>

	<ui:define name="title">JSF Composite Component Demo</ui:define>
	<ui:composition template="/layouts/HtmlDemo.xhtml">

		<ui:define name="content">
				<p:panel id="panel">
					<p>This demo explains how to use standard JSF Composite
						Components (without ivy Data and ivy Logic) from the
						'webContent/resources' folder.</p>
					<!--
					Insert the Component PersonJsfComponent with the 'jc' xml namespace followed by the file name of the 
					JSF Composite Component (see 'webContent/resources/demo-jsfcomponents/PersonJsfComponent.xhtml') and set
					the attribute 'person' for the PersonJsfComponent.
					 -->
					<jc:PersonJsfComponent person="#{data.person}" />

					<!--
					Output of the data modified in the PersonJsfComponent.
					 -->
					<br />
					<h:panelGrid columns="2" cellpadding="2" columnClasses="label-top">
						<h:outputText value="Firstname" />
						<h:outputText value="#{data.person.firstname}" />
						<h:outputText value="Lastname" />
						<h:outputText value="#{data.person.name}" />

						<h:outputText value="Delivery Address" />
						<h:panelGrid columns="2" cellpadding="2" columnClasses="label-top">
							<h:outputText value="Street" />
							<h:outputText value="#{data.person.deliveryAddress.street}" />
							<h:outputText value="Country" />
							<h:outputText value="#{data.person.deliveryAddress.country}" />
						</h:panelGrid>

						<h:outputText value="Billing Address" />
						<h:panelGrid columns="2" cellpadding="2" columnClasses="label-top">
							<h:outputText value="Street" />
							<h:outputText value="#{data.person.billingAddress.street}" />
							<h:outputText value="Country" />
							<h:outputText value="#{data.person.billingAddress.country}" />
						</h:panelGrid>
					</h:panelGrid>
				</p:panel>
		</ui:define>

	</ui:composition>
</h:body>
</html>