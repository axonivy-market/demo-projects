<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:ic="http://ivyteam.ch/jsf/component"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:pm="http://primefaces.org/mobile">
<h:body>
	<ui:composition template="/layouts/basic.xhtml">
		<ui:define name="title">FileUpload</ui:define>
		<ui:define name="content">
		<h:form id="form" enctype="multipart/form-data">
		<script type="text/javascript">
			function uploadFileJS(file) 
			{
				var form = new FormData();
				var filename = file[0].name;
				
				form.append("file", file[0]);
				
				var settings = {
			      "async": true,
			      "crossDomain": true,
			      "url": "http://localhost:8081/ivy/api/designer/fileUpload",
			      "method": "PUT",
			      "headers": {"X-Requested-By": "ivy"},
			      "processData": false,
			      "contentType": false,
			      "mimeType": "multipart/form-data",
			      "data": form
			    };
			
			    addToTable(filename);
			    
			    jsf.ajax.request(this, event,{
                             render: 'form:dataTable ',
                             'CLIENT_BEHAVIOR_RENDERING_MODE': 'UNOBSTRUSIVE'
                         });
			    
			    
			    return $.ajax(settings).done(function (response) {
			      console.log(response);
			    });
		    }
		    
		    var logic = {
				addJsToList : function (data, callback) {
					$.ajax({
						  url: "rest/method/addJsToList",
						  type: "POST",
						  dataType: 'json',
						  data:  JSON.stringify(data),
						  success:  function(data) {
			        					if (data.ivyRedirectUrl) {
			            					window.location.replace(data.ivyRedirectUrl);
			        					} else {
			        						return callback(data);
			        					}
			        				}
						}).error(function() { alert("Server error when calling method addJsToList"); });
				},
				loaded: true	
			};
			
		    function addToTable(fileName) {
		    	logic.addJsToList(
			    	{"fileName": fileName},
			    	function(returnData){});
		    	};
			
			</script>
			
			<h3>Rest file Client</h3>
				<h:panelGrid columns="1">
				<h:outputText value="1.1 Upload via JavaScript (pdf, txt, jpg)." />
					<p:outputPanel id="customPanel">
						<h:inputFile id="fileUpload" onchange="uploadFileJS(this.files);">
							<f:ajax render="dataTable"/>
						</h:inputFile>
					</p:outputPanel>
				</h:panelGrid>
				<br />
				
				<h:outputText
					value="1.2 Upload sample file via Rest Service Call in Process Logic" />
				<h:panelGrid columns="5">
					<p:selectOneMenu value="#{data.resourceName}">
						<f:selectItem itemLabel="test.jpg" itemValue="test.jpg" />
						<f:selectItem itemLabel="test.pdf" itemValue="test.pdf" />
						<f:selectItem itemLabel="test.txt" itemValue="test.txt" />
					</p:selectOneMenu>
					<p:spacer width="10px"/>
					<p:commandButton value="Upload Ivy Script"
						icon=" ui-icon-arrowthickstop-1-n"
						actionListener="#{logic.uploadIvyScript}" ajax="false" update="@all"/>
							or
						<p:commandButton value="Upload Java"
						icon="ui-icon-arrowthickstop-1-n"
						actionListener="#{logic.uploadJava}" ajax="false" update="@all">
						</p:commandButton>
				</h:panelGrid>
				<br />
				<h:outputText value="2. Download File from Rest Service" />
				<p:dataTable value="#{data.listFile}" widgetVar="dlFiles" var="file" id="dataTable"
					style="width: 500px" emptyMessage="No files were uploaded yet.">
					<p:column headerText="Uploaded Files">
						<p:outputLabel value="#{file}" />
					</p:column>
					<p:column headerText="Download" style="width: 120px">
						<p:commandButton id="dl" value="Download" ajax="false"
							actionListener="#{logic.download(file)}"
							icon="ui-icon-arrowthickstop-1-s">
							<p:fileDownload value="#{data.fileDownload}" />
						</p:commandButton>
					</p:column>
				</p:dataTable>
				<h:outputText style="font-size: 8pt;" value="*if animations are enabled there will be timeout while downloading"/>
			</h:form>

		</ui:define>
	</ui:composition>
</h:body>

</html>