<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<richDialogDescriptor>
    <description>This RDC displays a File list contained into a path in the form of a table.&#xD;
All the files presents in a folder are listed into a DB system. The List from the DB is going to be displayed.&#xD;
At the start of the RDC a consistancy cjheck between the DB and the filesystem is going to be performed.&#xD;
You can perform basic actions on the selected files: open / download / upload / delete</description>
    <tags>file list table</tags>
    <acceptedBroadcast>
        <name>SE_fileLocked</name>
        <description>Catch the System Event SE_fileLocked and update its list&#xD;
if the panelId is different from its one, and if the documentOnServer&#xD;
that was locked is located in its list.&#xD;
The FileManager sends/catches this event too.</description>
        <attachment>
            <name>panelIdAndDocumentOnServerLocked</name>
            <description></description>
            <parameterType>List</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </acceptedBroadcast>
    <acceptedBroadcast>
        <name>errorOccurred</name>
        <description></description>
        <attachment>
            <name>errorUtil</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.filemanager.ErrorUtil</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </acceptedBroadcast>
    <method>
        <name>setPath</name>
        <description>set the path where to look at the files.&#xD;
The Table list will be automatically refreshed with the new file list of the new path.</description>
        <inputParameter>
            <name>path</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>deleteFiles</name>
        <description>delete all the files&#xD;
gives a returned Message Object back with a Flag indicating if success or error.</description>
        <outputParameter>
            <name>returnedMessage</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.filemanager.ReturnedMessage</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>editFile</name>
        <description>open the file in edit mode.&#xD;
If already locked, open it and doesn't check for changes.</description>
        <inputParameter>
            <name>fileToEdit</name>
            <description>the java.io.File file to edit</description>
            <parameterType>java.io.File</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>setIconSize</name>
        <description>Set the Icon size.&#xD;
Takes the Icon size in pixel:&#xD;
Available are &quot;16&quot;, &quot;24&quot;, &quot;32&quot;, &quot;48&quot; and &quot;72&quot;</description>
        <inputParameter>
            <name>sizeInPixel</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>getSelectedFile</name>
        <description>Return the selected DocumentOnServer Object as a java.io.File</description>
        <outputParameter>
            <name>selectedFile</name>
            <description></description>
            <parameterType>java.io.File</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>_onChangeFile</name>
        <description>Called back when a File was changed</description>
        <inputParameter>
            <name>returnedMessage</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.filemanager.ReturnedMessage</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>getMultipleSelectionAllowed</name>
        <description>Returns the multiple selection allowed property of the table.</description>
        <outputParameter>
            <name>multipleSelectionAllowed</name>
            <description>Returns the multiple selection allowed property of the table.</description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>setUploadEnabled</name>
        <description>set if the panel upload Button/MenuItem are enabled</description>
        <inputParameter>
            <name>enabled</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>getListedDocumentOnServers</name>
        <description>get the files listed in the table in the form of a List of DocumentOnServer objects (see DocumentOnServer DataClass)</description>
        <outputParameter>
            <name>listOfDocumentOnServers</name>
            <description></description>
            <parameterType>List&lt;ch.ivyteam.ivy.addons.filemanager.DocumentOnServer&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>addDocumentOnServers</name>
        <description>add some files in the form of DocumentOnServer&#xD;
Used to inform this RDC that a group of Files has been externally added</description>
        <inputParameter>
            <name>listOfDocumentOnServer</name>
            <description></description>
            <parameterType>List&lt;ch.ivyteam.ivy.addons.filemanager.DocumentOnServer&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>getPath</name>
        <description>Return the current path directory where the files are  listed in the table</description>
        <outputParameter>
            <name>path</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>_getUploadedFileFromUploadHandler</name>
        <description>callback method that is called back from the uploadhandler when a group of Files (at least one) &#xD;
has been successfull uploaded.&#xD;
it adds the uploaded files to the table list.</description>
        <inputParameter>
            <name>files</name>
            <description></description>
            <parameterType>List&lt;java.io.File&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>getListedFiles</name>
        <description>get the files listed in the table in the form of a List of java.io.File</description>
        <outputParameter>
            <name>ListOfFiles</name>
            <description></description>
            <parameterType>List&lt;java.io.File&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>getSelectedDocuments</name>
        <description>Return the list of the currently selected DocumentOnServer.&#xD;
If the user cannot select multiple Items in the Table, then the list contains just the selected DocumentOnServer&#xD;
Those objects just contain the following informations: filename, path and size. The rest is null.</description>
        <outputParameter>
            <name>selectedDocuments</name>
            <description>Return the list of the currently selected DocumentOnServer.&#xD;
If the user cannot select multiple Items in the Table, then the list contains just the selected DocumentOnServer&#xD;
Those objects just contain the following informations: filename, path and size. The rest is null.</description>
            <parameterType>List&lt;ch.ivyteam.ivy.addons.filemanager.DocumentOnServer&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>printFile</name>
        <description></description>
        <inputParameter>
            <name>fileToPrint</name>
            <description></description>
            <parameterType>java.io.File</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>addFiles</name>
        <description>add some files&#xD;
Used to inform this RDC that a group of Files has been externally added</description>
        <inputParameter>
            <name>listOfFiles</name>
            <description></description>
            <parameterType>List&lt;java.io.File&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>setToolbarVisible</name>
        <description>set the toolbarvisibility</description>
        <inputParameter>
            <name>isToolbarVisible</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>getSelectedDocument</name>
        <description>Return the currently on the table selected DocumentOnServer &#xD;
This object just contains the following informations: filename, path and size. The rest is null.</description>
        <outputParameter>
            <name>selectedDocument</name>
            <description>Return the currently on the table selected DocumentOnServer &#xD;
This object just contains the following informations: filename, path and size. The rest is null.</description>
            <parameterType>ch.ivyteam.ivy.addons.filemanager.DocumentOnServer</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>_onProgress</name>
        <description>Not in use for the moment</description>
        <inputParameter>
            <name>percentDone</name>
            <description></description>
            <parameterType>Number</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>refresh</name>
        <description>Refresh the table list without checking if the files in the DB are all to be really found on the file system</description>
    </method>
    <method>
        <name>isToolbarVisible</name>
        <description>returns true if the toolbar is visible, else false</description>
        <outputParameter>
            <name>isToolbarVisible</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>getSelectedFiles</name>
        <description>return the list of the selected Files as List&lt;java.io.File&gt;&#xD;
If multiple selection allowed == false, then the list just contains the selected File.</description>
        <outputParameter>
            <name>selectedFiles</name>
            <description></description>
            <parameterType>List&lt;java.io.File&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>refreshWithCheck</name>
        <description>Refresh the table list WITH checking if the files in the DB are all to be really found on the file system</description>
    </method>
    <method>
        <name>setMultipleSelectionAllowed</name>
        <description>Set the multiple selection allowed property from the file table.&#xD;
If True, the user will be able to select more then one File at a time.</description>
        <inputParameter>
            <name>multipleSelectionAllowed</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>_onUploadError</name>
        <description>called back from the uploadHandler when an error occures in an Upload process.</description>
        <inputParameter>
            <name>returnedMessage</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.filemanager.ReturnedMessage</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <startMethod>
        <name>startWithPath</name>
        <description>Start with &#xD;
the path that is going to be listed</description>
        <inputParameter>
            <name>path</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>startWithPathAndIvyDbConnectionNameAndDBTableNameAndDBSchemaNameAndIsToolbarVisisbleAndIsMultipleSelectionAllowed</name>
        <description>Start with &#xD;
the path that is going to be listed&#xD;
the friendly name of the Ivy Db Connexion used to store the files infos&#xD;
the Name of the DB Table used to store the files Infos&#xD;
the schema name if necessary (ex: in case of PostgreSQL)&#xD;
a boolean telling if the toolbar is visible&#xD;
and the multiple selection allowed property of the table.</description>
        <inputParameter>
            <name>path</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>ivyDBConnectionName</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>DbTableName</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>DBSchemaName</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>isToolbarVisible</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>isMultipleSelectionAllowed</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>startPathAndMultipleSelectionAllowed</name>
        <description>Start with &#xD;
the path that is going to be listed&#xD;
and the multiple selection allowed property of the table.</description>
        <inputParameter>
            <name>path</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>multipleSelectionAllowed</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>startWithPathAndToolbarAndMultipleSelectionAllowed</name>
        <description>Start with &#xD;
the path that is going to be listed&#xD;
a boolean telling if the toolbar is visible&#xD;
and the multiple selection allowed property of the table.</description>
        <inputParameter>
            <name>path</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>isToolBarVisible</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>isMultipleSelectionAllowed</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>startUsingIvySystemDBWithServerPathAndToolbarAndMultipleSelectionAllowed</name>
        <description>Start with &#xD;
the path that is going to be listed&#xD;
a boolean telling if the toolbar is visible&#xD;
and the multiple selection allowed property of the table.&#xD;
The DB Table containing the informations about the Files is located into the Ivy System Database.</description>
        <inputParameter>
            <name>serverPath</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>toolbarVisible</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>multipleSelectionAllowed</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>start</name>
        <description>Default Rich Dialog start
This method can not be changed or deleted!</description>
    </startMethod>
    <startMethod>
        <name>startWithPathAndToolbar</name>
        <description>Start with &#xD;
the path that is going to be listed&#xD;
a boolean telling if the toolbar is visible&#xD;
</description>
        <inputParameter>
            <name>path</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>isToolBarVisible</name>
            <description></description>
            <parameterType>Boolean</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <firedEvent>
        <name>filesDeleted</name>
        <description>@SUBSCRIBERS sent whenever some Files are deleted</description>
        <attachment>
            <name>listOfDeletedFiles</name>
            <description></description>
            <parameterType>List&lt;java.io.File&gt;</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </firedEvent>
    <firedEvent>
        <name>SE_fileLocked</name>
        <description>System Event sent whenever a File is locked.&#xD;
This ables the other users to refresh their list.&#xD;
it sends a list of Parameters:&#xD;
the panelId that is the unique RDC panel Id&#xD;
The DocumentOnServer that is locked&#xD;
The FileManager sends/catches this event too.</description>
        <scope>SYSTEM</scope>
        <attachment>
            <name>panelIdAndDocumentOnServer</name>
            <description></description>
            <parameterType>List</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </firedEvent>
    <firedEvent>
        <name>filesSuccessfullyUploaded</name>
        <description>@SUBSCRIBERS: sent to inform parent panel that some Files were successfully uploaded.&#xD;
sends the list of successfully uploaded Files.</description>
        <attachment>
            <name>files</name>
            <description></description>
            <parameterType>List&lt;java.io.File&gt;</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </firedEvent>
    <firedEvent>
        <name>fileUploaded</name>
        <description>@SUBSCRIBERS Sent Whenever a File was successfull uploaded</description>
        <attachment>
            <name>fileuploaded</name>
            <description></description>
            <parameterType>java.io.File</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </firedEvent>
    <firedEvent>
        <name>errorOccurred</name>
        <description></description>
        <scope>APPLICATION</scope>
        <attachment>
            <name>errorUtil</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.filemanager.ErrorUtil</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </firedEvent>
    <property>
        <name>guid</name>
        <value>125FDB0198DA1DA8</value>
        <readOnly>true</readOnly>
    </property>
    <property>
        <name>version</name>
        <value>1</value>
        <readOnly>true</readOnly>
    </property>
    <property>
        <name>binary</name>
        <value>false</value>
        <readOnly>true</readOnly>
    </property>
</richDialogDescriptor>
