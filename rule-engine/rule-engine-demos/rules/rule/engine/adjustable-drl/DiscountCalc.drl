package rule.engine.demo
import rule.engine.demo.enums.MemberType
 
dialect "mvel"

rule "no discount"
	when		
		$data: RuleData(member.purchaseAmount >= rules.get(0).lowerLimit 
			&& member.purchaseAmount < rules.get(0).upperLimit 
			&& member.memberType == rules.get(0).memberType)
	then
		$data.member.discount = $data.rules.get(0).discount
end
 
rule "low discount"
	when		
		$data: RuleData(member.purchaseAmount >= rules.get(1).lowerLimit 
			&& member.purchaseAmount < rules.get(1).upperLimit 
			&& member.memberType == rules.get(1).memberType)
	then
		$data.member.discount = $data.rules.get(1).discount
end

rule "low-medium discount"
	when		
		$data: RuleData(member.purchaseAmount >= rules.get(2).lowerLimit 
			&& member.purchaseAmount < rules.get(2).upperLimit 
			&& member.memberType == rules.get(2).memberType)
	then
		$data.member.discount = $data.rules.get(2).discount
end

rule "high-medium discount"
	when		
		$data: RuleData(member.purchaseAmount >= rules.get(3).lowerLimit 
			&& member.purchaseAmount < rules.get(3).upperLimit 
			&& member.memberType == rules.get(3).memberType)
	then
		$data.member.discount = $data.rules.get(3).discount
end

rule "high discount"
	when		
		$data: RuleData(member.purchaseAmount >= rules.get(4).lowerLimit 
			&& member.purchaseAmount < rules.get(4).upperLimit 
			&& member.memberType == rules.get(4).memberType)
	then
		$data.member.discount = $data.rules.get(4).discount
end

rule "advanced discount"
	when		
		$data: RuleData(member.purchaseAmount >= rules.get(5).lowerLimit 
			&& member.purchaseAmount < rules.get(5).upperLimit 
			&& member.memberType == rules.get(5).memberType)
	then
		$data.member.discount = $data.rules.get(5).discount
end

rule "max discount"
	when		
		$data: RuleData(member.purchaseAmount >= rules.get(6).lowerLimit 
			&& member.purchaseAmount < rules.get(6).upperLimit 
			&& member.memberType == rules.get(6).memberType)
	then
		$data.member.discount = $data.rules.get(6).discount
end

