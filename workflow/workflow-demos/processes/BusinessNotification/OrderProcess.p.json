{
  "$schema" : "https://json-schema.axonivy.com/process/11.3.0/process.json",
  "id" : "18DD058BCE48D418",
  "config" : {
    "data" : "workflow.order.OrderData"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "RequestStart",
      "name" : "startOrder",
      "config" : {
        "signature" : "startOrder",
        "request" : {
          "name" : "8.1 Business Notification",
          "category" : "notification",
          "customFields" : [
            { "name" : "cssIcon", "value" : "si si-messages-bubble" }
          ]
        },
        "permission" : {
          "anonymous" : false
        },
        "persistOnStart" : true,
        "task" : {
          "name" : "New Order"
        },
        "case" : {
          "name" : "New Order"
        }
      },
      "visual" : {
        "at" : { "x" : 88, "y" : 96 }
      },
      "connect" : [
        { "id" : "f2", "to" : "f3" }
      ]
    }, {
      "id" : "f1",
      "type" : "TaskEnd",
      "visual" : {
        "at" : { "x" : 1408, "y" : 600 }
      }
    }, {
      "id" : "f3",
      "type" : "DialogCall",
      "name" : "Input Order",
      "config" : {
        "dialog" : "workflow.order.InputOrder:start()",
        "output" : {
          "map" : {
            "out" : "in",
            "out.customer" : "result.customer",
            "out.order" : "result.order"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 216, "y" : 96 }
      },
      "connect" : [
        { "id" : "f4", "to" : "f5" }
      ]
    }, {
      "id" : "f5",
      "type" : "Script",
      "name" : "Send New Order",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.notification.business.BusinessNotification;",
            "import ch.ivyteam.ivy.security.IRole;",
            "",
            "/*",
            "  Sends a new business notification",
            "  with the message \"New Order received\"",
            "  to all users that owns the role \"Processor\"",
            "*/",
            "BusinessNotification",
            "    .create()",
            "    .message().text(\"New order received\")",
            "    .receivers().addRole(\"Processor\")",
            "    .send();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 376, "y" : 96 }
      },
      "connect" : [
        { "id" : "f6", "to" : "f7" }
      ]
    }, {
      "id" : "f7",
      "type" : "TaskSwitchEvent",
      "config" : {
        "task" : {
          "name" : "Process order <%= in1.order.product %> for customer <%= in1.customer.surname %> <%= in1.customer.name %>",
          "description" : "Please process the order of a <%= in1.order.product %> for the customer <%= in1.customer.surname %> <%= in1.customer.name %>",
          "responsible" : {
            "activator" : "Processor"
          }
        },
        "case" : {
          "name" : "Order <%=in1.order.product%> for customer <%= in1.customer.surname %> <%= in1.customer.name%>"
        }
      },
      "visual" : {
        "at" : { "x" : 376, "y" : 192 }
      },
      "connect" : [
        { "id" : "f8", "to" : "f9" }
      ]
    }, {
      "id" : "f9",
      "type" : "DialogCall",
      "name" : "Process Order",
      "config" : {
        "dialog" : "workflow.order.ProcessOrder:start(workflow.order.Person,workflow.order.Order)",
        "call" : {
          "map" : {
            "param.customer" : "in.customer",
            "param.order" : "in.order"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 376, "y" : 264 }
      },
      "connect" : [
        { "id" : "f10", "to" : "f11" }
      ]
    }, {
      "id" : "f11",
      "type" : "Script",
      "name" : "Send Order Processed",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.notification.business.BusinessNotification;",
            "import ch.ivyteam.ivy.security.IRole;",
            "",
            "/*",
            "  Sends a new business notification",
            "  with the message \"Order {0} processed for customer {1} {2}\" ",
            "  using placeholders in the message that are replaced by the given additional arguments",
            "  to all users that owns the role \"Processor\"",
            "*/",
            "IRole processor = ivy.security.roles().find(\"Processor\");",
            "BusinessNotification",
            "    .create()",
            "    .message().text(\"Order {0} processed for customer {1} {2}\", in.order.product, in.customer.surname, in.customer.name)",
            "    .receivers().add(processor)",
            "    .send();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 544, "y" : 264 }
      },
      "connect" : [
        { "id" : "f12", "to" : "f13" }
      ]
    }, {
      "id" : "f13",
      "type" : "TaskSwitchEvent",
      "config" : {
        "task" : {
          "name" : "Deliver order <%= in1.order.product %> to customer <%= in1.customer.surname %> <%= in1.customer.name %>",
          "description" : "Please deliver the order <%= in1.order.product %> to customer <%= in1.customer.surname %> <%=in1.customer.name %>",
          "responsible" : {
            "activator" : "Deliverer"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 544, "y" : 336 }
      },
      "connect" : [
        { "id" : "f14", "to" : "f15" }
      ]
    }, {
      "id" : "f15",
      "type" : "DialogCall",
      "name" : "Deliver Order",
      "config" : {
        "dialog" : "workflow.order.DeliverOrder:start(workflow.order.Person,workflow.order.Order)",
        "call" : {
          "map" : {
            "param.customer" : "in.customer",
            "param.order" : "in.order"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 544, "y" : 416 }
      },
      "connect" : [
        { "id" : "f16", "to" : "f17" }
      ]
    }, {
      "id" : "f17",
      "type" : "Script",
      "name" : "Send Order Delivered",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.notification.business.BusinessNotification;",
            "/*",
            "  Sends a new business notification",
            "  with the mutli-lingual message stored in CMS under path \"/Notification/Messages/OrderDelivered\" ",
            "  using placeholders in the message that are replaced by the given additional arguments",
            "  to all users that were involved in the current case. ",
            "  Involved in a case means the user has worked on or has a role that was involved in the case.",
            "*/",
            "BusinessNotification",
            "    .create()",
            "    .message().fromCms(\"OrderDelivered\", in.order.product, in.customer.surname, in.customer.name)",
            "    .receivers().ofCase().addAllInvolved()",
            "    .send();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 712, "y" : 416 }
      },
      "connect" : [
        { "id" : "f18", "to" : "f19" }
      ]
    }, {
      "id" : "f19",
      "type" : "TaskSwitchEvent",
      "config" : {
        "task" : {
          "name" : "Send invoice for order <%= in1.order.product %> to customer <%= in1.customer.surname %> <%= in1.customer.name %>",
          "description" : "Please send invoice for the order <%= in1.order.product %> to the customer <%= in1.customer.surname %> <%=in1.customer.name %>"
        }
      },
      "visual" : {
        "at" : { "x" : 712, "y" : 496 }
      },
      "connect" : [
        { "id" : "f20", "to" : "f21" }
      ]
    }, {
      "id" : "f21",
      "type" : "DialogCall",
      "name" : "Send Invoice",
      "config" : {
        "dialog" : "workflow.order.SendInvoice:start(workflow.order.Person,workflow.order.Order)",
        "call" : {
          "map" : {
            "param.customer" : "in.customer",
            "param.order" : "in.order"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 712, "y" : 600 }
      },
      "connect" : [
        { "id" : "f22", "to" : "f23" }
      ]
    }, {
      "id" : "f23",
      "type" : "Script",
      "name" : "Send Invoice Sent",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.notification.business.BusinessNotification;",
            "/*",
            "  Sends a new business notification",
            "  with the mutli-lingual message stored in CMS under path \"/Notification/Messages/InvoiceSent\"",
            "  using placeholders in the message that are replaced by the given additional arguments",
            "  to all users that could have worked on the current task.",
            "  The format of the message is defined by the given template (see CMS \"/Notification/business/Templates/Order/web/Subject\") ",
            "  and payload object.",
            "*/",
            "BusinessNotification",
            "    .create()",
            "    .template(\"Order\")",
            "    .payload(in.customer)",
            "    .message().fromCms(\"InvoiceSent\", in.order.product)",
            "    .receivers().ofTask().addActivator()",
            "    .send();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 872, "y" : 600 }
      },
      "connect" : [
        { "id" : "f24", "to" : "f25" }
      ]
    }, {
      "id" : "f25",
      "type" : "TaskSwitchEvent",
      "config" : {
        "task" : {
          "name" : "Book payment for order <%= in1.order.product %> by customer <%= in1.customer.surname %> <%= in1.customer.name %>",
          "description" : "Please book payment for the order <%= in1.order.product %> by the customer <%= in1.customer.surname %> <%=in1.customer.name %>",
          "responsible" : {
            "activator" : "Finance"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 992, "y" : 600 }
      },
      "connect" : [
        { "id" : "f26", "to" : "f27" }
      ]
    }, {
      "id" : "f27",
      "type" : "DialogCall",
      "name" : "Book Payment",
      "config" : {
        "dialog" : "workflow.order.BookPayment:start(workflow.order.Person,workflow.order.Order)",
        "call" : {
          "map" : {
            "param.customer" : "in.customer",
            "param.order" : "in.order"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 1120, "y" : 600 }
      },
      "connect" : [
        { "id" : "f28", "to" : "f29" }
      ]
    }, {
      "id" : "f29",
      "type" : "Script",
      "name" : "Send Order Finished",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.notification.business.BusinessNotification;",
            "/*",
            "  Sends a new business notification",
            "  with the mutli-lingual message stored in CMS under path \"/Notification/Messages/OrderFinished\"",
            "  using placeholders in the message that are replaced by the given additional argument",
            "  to all users that were involved in the current case.",
            "  The format of the message is defined by the given template (see CMS \"/Notification/business/Templates/Order/web/Subject\") ",
            "  and payload object.",
            "*/",
            "BusinessNotification",
            "    .create()",
            "    .template(\"Order\")",
            "    .payload(in.customer)",
            "    .message().fromCms(\"OrderFinished\", in.order.product)",
            "    .receivers().ofCase().addAllInvolved()",
            "    .send();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1280, "y" : 600 }
      },
      "connect" : [
        { "id" : "f30", "to" : "f1" }
      ]
    }, {
      "id" : "f40",
      "type" : "ProcessAnnotation",
      "name" : [
        "**Business Notification Demo**",
        "",
        "This demo shows how you can send business notifications in your process.",
        "It starts with the simplest way first, then shows how you can use process data in your messages, use multi-lingual messages, and finally how to use templates."
      ],
      "visual" : {
        "at" : { "x" : 696, "y" : 92 },
        "size" : { "width" : 416, "height" : 132 }
      }
    } ],
  "layout" : {
    "lanes" : [ {
        "name" : "OrderProcess",
        "size" : 688,
        "lanes" : [ {
            "name" : "Customer",
            "size" : 192
          }, {
            "name" : "Processor",
            "size" : 144
          }, {
            "name" : "Deliverer",
            "size" : 160
          }, {
            "name" : "Finance",
            "size" : 192
          } ]
      } ]
  }
}