{
  "$schema" : "https://json-schema.axonivy.com/process/11.1.19/schema.json",
  "id" : "1525503525CD0CCC",
  "kind" : "HTML_DIALOG",
  "config" : {
    "data" : "workflow.agileBPM.define_WF.define_WFData"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "HtmlDialogStart",
      "name" : "start(List<TaskDef>,CaseDef)",
      "config" : {
        "signature" : "start",
        "result" : {
          "params" : [
            { "name" : "definedTasks", "type" : "List<workflow.agileBPM.TaskDef>", "desc" : "" },
            { "name" : "caseInfo", "type" : "workflow.agileBPM.CaseDef", "desc" : "" }
          ],
          "map" : {
            "result.definedTasks" : "in.definedTasks",
            "result.caseInfo" : "in.caseInfo"
          }
        },
        "guid" : "144633F67BB43F5D"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 64 },
        "labelOffset" : { "x" : 47, "y" : 43 }
      },
      "connect" : [
        { "id" : "f12", "to" : "f7" }
      ]
    }, {
      "id" : "f1",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 64 }
      }
    }, {
      "id" : "f4",
      "type" : "HtmlDialogExit",
      "visual" : {
        "at" : { "x" : 544, "y" : 160 }
      }
    }, {
      "id" : "f28",
      "type" : "HtmlDialogEventStart",
      "name" : "go",
      "config" : {
        "guid" : "14913CDEFB31F084"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 160 },
        "labelOffset" : { "x" : 9, "y" : 35 }
      },
      "connect" : [
        { "id" : "f5", "to" : "f3" }
      ]
    }, {
      "id" : "f3",
      "type" : "Script",
      "name" : "Setup Case",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.SystemDo;",
            "import workflow.agileBPM.TaskDef;",
            "out.errormsg = null;",
            "for(TaskDef tdef: in.definedTasks)",
            "{",
            "  List<String> names = tdef.actor.split(\",\");",
            "  for(String name: names)",
            "  {",
            "    if(name.trim().length()>0 && ivy.security.users().find(name.trim())== null)",
            "    {",
            "      out.errormsg = \"WF User \"+name.trim()+\" not found\";",
            "    }  ",
            "  }  ",
            "}",
            "",
            "if(out.errormsg.length() == 0)",
            "{",
            "  SystemDo.setCaseName(ivy.case,in.caseInfo.kind + \": \" + in.caseInfo.subject);",
            "  SystemDo.setCaseDescription(ivy.case,in.caseInfo.description);",
            "  SystemDo.setProcess(ivy.case,in.caseInfo.kind, in.caseInfo.kind);",
            "  ",
            "  if(in.caseInfo.attachment.getName().lastIndexOf(\".\")>0)",
            "  {",
            "    in.caseInfo.attachment = in.caseInfo.attachment.makePersistent(true);  ",
            "  }  ",
            "  else",
            "  {",
            "    in.caseInfo.attachment = null;  ",
            "  }",
            "  ",
            "  out.definedTasks.addAll(in.additionalTasks);",
            "  ivy.case.createNote(ivy.session,\"Started\");",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 176, "y" : 160 }
      },
      "connect" : [
        { "id" : "f23", "to" : "f22" }
      ]
    }, {
      "id" : "f11",
      "type" : "Script",
      "name" : "add new Task to List",
      "config" : {
        "output" : {
          "code" : [
            "workflow.agileBPM.TaskDef newTask = new workflow.agileBPM.TaskDef();",
            "newTask.setActor(ivy.session.getSessionUserName());",
            "newTask.setAssigned(new DateTime());",
            "if(\"AD-HOC\".equals(in.caseInfo.kind))",
            "{",
            "  newTask.kind = \"TASK\";",
            "  newTask.description = \"...\";",
            "}",
            "else",
            "{",
            "  newTask.kind = in.caseInfo.kind;",
            "}  ",
            "if(out.definedTasks.size()>0 && out.definedTasks.get(out.definedTasks.size()-1).until is initialized)",
            "{",
            "  newTask.setUntil(ivy.cal.getWorkDayIn(out.definedTasks.get(out.definedTasks.size()-1).until, 1));",
            "}",
            "else",
            "{",
            "  newTask.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "}  ",
            "out.definedTasks.add(newTask);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 176, "y" : 256 },
        "size" : { "width" : 128, "height" : 60 }
      },
      "connect" : [
        { "id" : "f10", "to" : "f9" }
      ]
    }, {
      "id" : "f8",
      "type" : "HtmlDialogEventStart",
      "name" : "addTaskDef",
      "config" : {
        "guid" : "144689B5E8531C29"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 256 },
        "labelOffset" : { "x" : 12, "y" : 32 }
      },
      "connect" : [
        { "id" : "f14", "to" : "f11" }
      ]
    }, {
      "id" : "f9",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 256 }
      }
    }, {
      "id" : "f7",
      "type" : "Script",
      "name" : "Init",
      "config" : {
        "output" : {
          "map" : {
            "out" : "in",
            "out.caseInfo.kind" : "\"TODO\"",
            "out.started" : "new DateTime()"
          },
          "code" : [
            "import javax.faces.context.FacesContext;",
            "import ch.ivyteam.ivy.Helper;",
            "import java.util.Collection;",
            "",
            "// creator task",
            "out.newTask = new workflow.agileBPM.TaskDef();",
            "out.newTask.setActor(ivy.session.getSessionUserName());",
            "out.newTask.setKind(in.caseInfo.kind);",
            "out.newTask.setAssigned(new DateTime());",
            "out.newTask.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "",
            "// a first task",
            "workflow.agileBPM.TaskDef newTask = new workflow.agileBPM.TaskDef();",
            "newTask.setActor(ivy.session.getSessionUserName());",
            "newTask.setKind(in.caseInfo.kind);",
            "newTask.setAssigned(new DateTime());",
            "newTask.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "out.definedTasks.add(newTask);",
            "",
            "// wfuserlist",
            "// not that gravatar is used for portrait images",
            "import ch.ivyteam.ivy.security.IUser;",
            "in.userList.clear();",
            "",
            "for(IUser user : ivy.security.users().paged())",
            "{",
            "  if(user.getName() != \"SYSTEM\")",
            "  {",
            "    out.userList.add(user);",
            "  }",
            "}",
            "out.userList = Helper.sortUsers(out.userList);"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 176, "y" : 64 }
      },
      "connect" : [
        { "id" : "f2", "to" : "f1" }
      ]
    }, {
      "id" : "f13",
      "type" : "HtmlDialogMethodStart",
      "name" : "deleteTask(TaskDef)",
      "config" : {
        "signature" : "deleteTask",
        "input" : {
          "params" : [
            { "name" : "taskdef", "type" : "workflow.agileBPM.TaskDef", "desc" : "" }
          ],
          "map" : { },
          "code" : "out.definedTasks = out.definedTasks.remove(param.taskdef);"
        },
        "guid" : "14ADE4A40F9E30A6"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 400 },
        "labelOffset" : { "x" : 15, "y" : 35 }
      },
      "connect" : [
        { "id" : "f16", "to" : "f15" }
      ]
    }, {
      "id" : "f15",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 400 }
      }
    }, {
      "id" : "f17",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 328 }
      }
    }, {
      "id" : "f18",
      "type" : "Script",
      "name" : "init List of Tasks",
      "config" : {
        "output" : {
          "code" : [
            "out.definedTasks.clear();",
            "out.additionalTasks.clear();",
            "",
            "workflow.agileBPM.TaskDef newTask = new workflow.agileBPM.TaskDef();",
            "newTask.setActor(ivy.session.getSessionUserName());",
            "newTask.setAssigned(new DateTime());",
            "newTask.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "",
            "if(in.caseInfo.kind.equalsIgnoreCase(\"TODO\"))",
            "{",
            "newTask.setKind(\"TODO\");",
            "out.definedTasks.add(newTask);    ",
            "}  ",
            "else if(in.caseInfo.kind.equalsIgnoreCase(\"APPROVAL\"))",
            "{",
            "newTask.setKind(\"APPROVAL\");  ",
            "workflow.agileBPM.TaskDef newTask2 = new workflow.agileBPM.TaskDef();",
            "newTask2.setActor(\"SYSTEM\");",
            "newTask2.setKind(\"EMail to Creator\");",
            "newTask2.setAssigned(new DateTime());",
            "out.additionalTasks.add(newTask2);    ",
            "out.definedTasks.add(newTask);  ",
            "}  ",
            "else if(in.caseInfo.kind.equalsIgnoreCase(\"QA\"))",
            "{",
            "newTask.setKind(\"QA\");  ",
            "workflow.agileBPM.TaskDef newTask2 = new workflow.agileBPM.TaskDef();",
            "newTask2.setActor(ivy.session.getSessionUserName());",
            "newTask2.setKind(\"RESPONSE\");",
            "newTask2.setAssigned(new DateTime());",
            "newTask2.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "out.additionalTasks.add(newTask2);  ",
            "out.definedTasks.add(newTask);",
            "}  ",
            "else",
            "{ ",
            "  // AD-HOC",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 176, "y" : 328 }
      },
      "connect" : [
        { "id" : "f20", "to" : "f17" }
      ]
    }, {
      "id" : "f19",
      "type" : "HtmlDialogEventStart",
      "name" : "initTaskDef",
      "config" : {
        "guid" : "14AEE59B893711B7"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 328 },
        "labelOffset" : { "x" : 11, "y" : 35 }
      },
      "connect" : [
        { "id" : "f21", "to" : "f18" }
      ]
    }, {
      "id" : "f22",
      "type" : "Alternative",
      "name" : "wf user ok?",
      "visual" : {
        "at" : { "x" : 288, "y" : 160 },
        "labelOffset" : { "x" : 12, "y" : 38 }
      },
      "connect" : [
        { "id" : "f6", "to" : "f4", "label" : {
            "name" : "Yes",
            "offset" : { "x" : 0, "y" : 7 }
          }, "condition" : "in.errormsg.length() == 0" },
        { "id" : "f27", "to" : "f26", "via" : [ { "x" : 288, "y" : 112 } ], "label" : {
            "name" : "No",
            "segment" : 1.36,
            "offset" : { "x" : 0, "y" : -8 }
          } }
      ]
    }, {
      "id" : "f24",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 544, "y" : 112 }
      }
    }, {
      "id" : "f26",
      "type" : "Script",
      "name" : "Error msg",
      "config" : {
        "output" : {
          "code" : [
            "import javax.faces.application.FacesMessage;",
            "import javax.faces.context.FacesContext;",
            "",
            "FacesContext.getCurrentInstance().addMessage(null,",
            "  new FacesMessage(FacesMessage.SEVERITY_ERROR,",
            "  in.errormsg, \"Task assignmemt not valid.\"));"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 416, "y" : 112 }
      },
      "connect" : [
        { "id" : "f25", "to" : "f24" }
      ]
    }, {
      "id" : "f29",
      "type" : "HtmlDialogEventStart",
      "name" : "setUser",
      "config" : {
        "guid" : "14BE55BAABBA28CB"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 480 },
        "labelOffset" : { "x" : 10, "y" : 35 }
      },
      "connect" : [
        { "id" : "f33", "to" : "f32" }
      ]
    }, {
      "id" : "f32",
      "type" : "Script",
      "name" : "editTask",
      "config" : {
        "output" : {
          "code" : [
            "if(in.user.length()>0)",
            "{",
            "  in.editTask.setActor(in.user);",
            "}  ",
            "out.userSelection.clear();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 176, "y" : 480 }
      },
      "connect" : [
        { "id" : "f31", "to" : "f30" }
      ]
    }, {
      "id" : "f30",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 480 }
      }
    }, {
      "id" : "f34",
      "type" : "HtmlDialogEventStart",
      "name" : "updateUserList",
      "config" : {
        "guid" : "14BEECEBE2A5DE80"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 576 },
        "labelOffset" : { "x" : 13, "y" : 35 }
      },
      "connect" : [
        { "id" : "f38", "to" : "f37" }
      ]
    }, {
      "id" : "f35",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 576 }
      }
    }, {
      "id" : "f37",
      "type" : "Script",
      "name" : "update users",
      "config" : {
        "output" : {
          "code" : [
            "out.user=\"\";",
            "import ch.ivyteam.ivy.security.IUser;",
            "for(IUser u: in.userSelection)",
            "{",
            "  out.user = out.user+\", \"+u.getName();  ",
            "}  ",
            "out.user = out.user.replaceFirst(\", \",\"\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 176, "y" : 576 }
      },
      "connect" : [
        { "id" : "f36", "to" : "f35" }
      ]
    }, {
      "id" : "f39",
      "type" : "Script",
      "name" : "init users",
      "config" : {
        "output" : {
          "code" : [
            "List<String> users = in.editTask.actor.split(\",\");",
            "import ch.ivyteam.ivy.security.IUser;",
            "out.userSelection.clear();",
            "if(users.size()>1)",
            "{",
            "  for(String u: users)",
            "  {",
            "    out.userSelection.add(ivy.security.users().find(u.trim()));",
            "  }  ",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 176, "y" : 672 }
      },
      "connect" : [
        { "id" : "f43", "to" : "f40" }
      ]
    }, {
      "id" : "f40",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 672 }
      }
    }, {
      "id" : "f44",
      "type" : "HtmlDialogMethodStart",
      "name" : "initUserList(TaskDef)",
      "config" : {
        "signature" : "initUserList",
        "input" : {
          "params" : [
            { "name" : "taskDef", "type" : "workflow.agileBPM.TaskDef", "desc" : "" }
          ],
          "map" : {
            "out.editTask" : "param.taskDef",
            "out.user" : "param.taskDef.actor"
          }
        },
        "guid" : "14BEF560D05EF4D6"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 672 },
        "labelOffset" : { "x" : 14, "y" : 35 }
      },
      "connect" : [
        { "id" : "f41", "to" : "f39" }
      ]
    }, {
      "id" : "f47",
      "type" : "HtmlDialogMethodStart",
      "name" : "editTaskDescription(TaskDef)",
      "config" : {
        "signature" : "editTaskDescription",
        "input" : {
          "params" : [
            { "name" : "taskDef", "type" : "workflow.agileBPM.TaskDef", "desc" : "" }
          ],
          "map" : {
            "out.editTask" : "param.taskDef",
            "out.taskDescription" : "\"...\".equals(param.taskDef.description) ? \"\" : param.taskDef.description"
          }
        },
        "guid" : "150143FB91A313FB"
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 768 },
        "labelOffset" : { "x" : 18, "y" : 35 }
      },
      "connect" : [
        { "id" : "f49", "to" : "f48" }
      ]
    }, {
      "id" : "f48",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 192, "y" : 768 }
      }
    }, {
      "id" : "f50",
      "type" : "HtmlDialogEventStart",
      "name" : "setTaskDescription",
      "config" : {
        "guid" : "150144175FAED33C",
        "output" : {
          "map" : {
            "out" : "in",
            "out.editTask.description" : "in.taskDescription.length() == 0 ? \"...\" : in.taskDescription"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 64, "y" : 864 },
        "labelOffset" : { "x" : 15, "y" : 35 }
      },
      "connect" : [
        { "id" : "f52", "to" : "f51" }
      ]
    }, {
      "id" : "f51",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 192, "y" : 864 }
      }
    } ]
}