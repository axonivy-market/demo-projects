{
  "$schema" : "https://json-schema.axonivy.com/process/11.1.15/schema.json",
  "id" : "152550395446E592",
  "kind" : "HTML_DIALOG",
  "config" : {
    "data" : "workflow.agileBPM.task_Form.task_FormData"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "HtmlDialogStart",
      "name" : "start(CaseDef,TaskDef)",
      "config" : {
        "signature" : "start",
        "input" : {
          "params" : [
            { "name" : "caseInfo", "type" : "workflow.agileBPM.CaseDef", "desc" : "" },
            { "name" : "nextTask", "type" : "workflow.agileBPM.TaskDef", "desc" : "" },
            { "name" : "definedTasks", "type" : "List<workflow.agileBPM.TaskDef>", "desc" : "" }
          ],
          "map" : {
            "out.caseInfo" : "param.caseInfo",
            "out.definedTasks" : "param.definedTasks",
            "out.nextTask" : "param.nextTask"
          },
          "code" : [
            "import workflow.agileBPM.TaskDef;",
            "import ch.ivyteam.ivy.workflow.ITask;",
            "",
            "for (ITask itask : ivy.case.tasks().all()) {",
            "  if(!\"#SYSTEM\".equalsIgnoreCase(itask.getActivatorName()) ",
            "    && itask.getEndTimestamp().toString().length()>0",
            "    && !\"AD_HOC_MODIFIED\".equals(itask.customFields().stringField(\"CustomVarCharField1\").getOrNull()))",
            "  {",
            "    TaskDef def =   new TaskDef();",
            "    def.actor = itask.getWorkerUserName();",
            "    def.kind = itask.customFields().stringField(\"KindCode\").getOrNull();",
            "    def.done = itask.getEndTimestamp();",
            "    def.taskNotes = itask.getNotes();",
            "    out.taskHistory.add(def);",
            "  }",
            "}",
            "out.addTask = new workflow.agileBPM.TaskDef();",
            "workflow.agileBPM.TaskDef oldTask = param.nextTask; //out.taskHistory.get(out.taskHistory.size()-1);",
            "out.addTask.setActor(ivy.session.getSessionUserName());",
            "out.addTask.setAssigned(new DateTime());",
            "out.addTask.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "out.addTask.kind = oldTask.kind;",
            "",
            "out.caseNotes = ivy.case.getNotes();"
          ]
        },
        "result" : {
          "params" : [
            { "name" : "definedTasks", "type" : "List<workflow.agileBPM.TaskDef>", "desc" : "" }
          ],
          "map" : {
            "result.definedTasks" : "in.definedTasks"
          }
        },
        "guid" : "1492E077AC02C00B"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 64 },
        "labelOffset" : { "x" : 16, "y" : 35 }
      },
      "connect" : [
        { "id" : "f26", "to" : "f15" }
      ]
    }, {
      "id" : "f1",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 352, "y" : 64 }
      }
    }, {
      "id" : "f3",
      "type" : "HtmlDialogEventStart",
      "name" : "close",
      "config" : {
        "guid" : "1492E077ACABAB84"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 160 },
        "labelOffset" : { "x" : 9, "y" : 35 }
      },
      "connect" : [
        { "id" : "f10", "to" : "f9" }
      ]
    }, {
      "id" : "f4",
      "type" : "HtmlDialogExit",
      "visual" : {
        "at" : { "x" : 512, "y" : 160 }
      }
    }, {
      "id" : "f6",
      "type" : "HtmlDialogEventStart",
      "name" : "followupQ",
      "config" : {
        "guid" : "14B02755D931FD2D"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 272 },
        "labelOffset" : { "x" : 11, "y" : 35 }
      },
      "connect" : [
        { "id" : "f7", "to" : "f11" }
      ]
    }, {
      "id" : "f9",
      "type" : "Script",
      "name" : "set historyNote",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.workflow.INote;",
            "if(in.nextTask.kind.equalsIgnoreCase(\"APPROVAL\"))",
            "{",
            "    ivy.case.createNote(ivy.session, \"Approved: \"+ in.ok+\" \"+in.answer);",
            "    ivy.task.createNote(ivy.session, \"Approved: \"+ in.ok+\" \"+in.answer);",
            "}  ",
            "else if(in.nextTask.kind.equalsIgnoreCase(\"QA\"))",
            "{",
            "    ivy.case.createNote(ivy.session, \"Answer: \" +in.answer);",
            "    ivy.task.createNote(ivy.session, \"Answer: \" +in.answer);",
            "}",
            "else if(in.nextTask.kind.equalsIgnoreCase(\"TASK\"))",
            "{",
            "    ivy.case.createNote(ivy.session, \"Comment: \" +in.answer);",
            "    ivy.task.createNote(ivy.session, \"Comment: \" +in.answer);",
            "}    ",
            "else if(in.nextTask.kind.equalsIgnoreCase(\"RESPONSE\"))",
            "{",
            "    ivy.case.createNote(ivy.session, \"Ok\");",
            "    ivy.task.createNote(ivy.session, \"Ok\");",
            "}  "
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 392, "y" : 160 }
      },
      "connect" : [
        { "id" : "f5", "to" : "f4" }
      ]
    }, {
      "id" : "f11",
      "type" : "Script",
      "name" : "add new Tasks to List",
      "config" : {
        "output" : {
          "code" : [
            "workflow.agileBPM.TaskDef newTask1 = new workflow.agileBPM.TaskDef();",
            "workflow.agileBPM.TaskDef oldTask = out.taskHistory.get(out.taskHistory.size()-1);",
            "newTask1.setActor(oldTask.actor);",
            "newTask1.setAssigned(new DateTime());",
            "newTask1.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "newTask1.kind = \"QA\";",
            "newTask1.description = in.remark;",
            "out.definedTasks.add(0,newTask1);",
            "",
            "out.definedTasks.add(1,in.nextTask.setUntil(ivy.cal.getWorkDayIn(2,new Time())));"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 224, "y" : 272 },
        "size" : { "width" : 128, "height" : 60 }
      },
      "connect" : [
        { "id" : "f17", "to" : "f16" }
      ]
    }, {
      "id" : "f8",
      "type" : "Script",
      "name" : "add new Task to List",
      "config" : {
        "output" : {
          "code" : [
            "workflow.agileBPM.TaskDef newTask2 = new workflow.agileBPM.TaskDef();",
            "newTask2.setActor(in.addTask.actor);",
            "newTask2.setAssigned(new DateTime());",
            "newTask2.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "newTask2.kind = \"TASK\";",
            "newTask2.description = in.remark;",
            "newTask2.setAdhoc(true);",
            "",
            "out.definedTasks.add(0,newTask2);",
            "out.msg = in.addTask.actor;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 224, "y" : 512 },
        "size" : { "width" : 128, "height" : 60 }
      },
      "connect" : [
        { "id" : "f19", "to" : "f18" }
      ]
    }, {
      "id" : "f12",
      "type" : "HtmlDialogEventStart",
      "name" : "appendTask",
      "config" : {
        "guid" : "14B733FBF37CF8B5"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 512 },
        "labelOffset" : { "x" : 12, "y" : 35 }
      },
      "connect" : [
        { "id" : "f14", "to" : "f8" }
      ]
    }, {
      "id" : "f16",
      "type" : "Script",
      "name" : "set historyNote",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.workflow.INote;",
            "if(in.nextTask.kind.equalsIgnoreCase(\"RESPONSE\"))",
            "{",
            "    ivy.task.createNote(ivy.session, \"New question: \" +in.remark);",
            "}  "
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 392, "y" : 272 }
      },
      "connect" : [
        { "id" : "f13", "to" : "f4", "via" : [ { "x" : 512, "y" : 272 } ] }
      ]
    }, {
      "id" : "f20",
      "type" : "HtmlDialogMethodStart",
      "name" : "done(Boolean)",
      "config" : {
        "signature" : "done",
        "input" : {
          "params" : [
            { "name" : "done", "type" : "Boolean", "desc" : "" }
          ],
          "map" : {
            "out.done" : "param.done"
          }
        },
        "guid" : "14B7E1153B0E4196"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 416 },
        "labelOffset" : { "x" : 13, "y" : 35 }
      },
      "connect" : [
        { "id" : "f22", "to" : "f21" }
      ]
    }, {
      "id" : "f21",
      "type" : "Script",
      "name" : "set historyNote",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.workflow.INote;",
            "if(in.nextTask.kind.equalsIgnoreCase(\"TODO\"))",
            "{",
            "  ivy.case.createNote(ivy.session, \"Done \"+(in.done ? \"confirmed\" : \"refused\"));",
            "  ivy.task.createNote(ivy.session, \"Done \"+(in.done ? \"confirmed\" : \"refused\"));",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 384, "y" : 416 }
      },
      "connect" : [
        { "id" : "f23", "to" : "f4", "via" : [ { "x" : 512, "y" : 416 } ] }
      ]
    }, {
      "id" : "f37",
      "type" : "Script",
      "name" : "update users",
      "config" : {
        "output" : {
          "code" : [
            "out.addTask.actor=\"\";",
            "import ch.ivyteam.ivy.security.IUser;",
            "for(IUser u: in.userSelection)",
            "{",
            "  out.addTask.actor = out.addTask.actor+\", \"+u.getName();  ",
            "}  ",
            "out.addTask.actor = out.addTask.actor.replaceFirst(\", \",\"\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 208, "y" : 624 }
      },
      "connect" : [
        { "id" : "f36", "to" : "f35" }
      ]
    }, {
      "id" : "f34",
      "type" : "HtmlDialogEventStart",
      "name" : "updateUserList",
      "config" : {
        "guid" : "14BEFA696A6EEA50"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 624 },
        "labelOffset" : { "x" : 13, "y" : 35 }
      },
      "connect" : [
        { "id" : "f38", "to" : "f37" }
      ]
    }, {
      "id" : "f35",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 320, "y" : 624 }
      }
    }, {
      "id" : "f15",
      "type" : "Script",
      "name" : "init userlist",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.Helper;",
            "",
            "// wfuserlist",
            "// not that gravatar is used for portrait images",
            "import ch.ivyteam.ivy.security.IUser;",
            "in.userList.clear();",
            "",
            "for(IUser user : ivy.security.users().paged())",
            "{",
            "  if(user.getName() != \"SYSTEM\")",
            "  {",
            "    out.userList.add(user);",
            "  }",
            "}",
            "out.userList = Helper.sortUsers(out.userList);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 224, "y" : 64 }
      },
      "connect" : [
        { "id" : "f2", "to" : "f1" }
      ]
    }, {
      "id" : "f24",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 512, "y" : 512 }
      }
    }, {
      "id" : "f28",
      "type" : "Script",
      "name" : "insert new Tasks to List",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.SystemDo;",
            "SystemDo.setCustomVarCharField1(ivy.task, \"AD_HOC_MODIFIED\");",
            "",
            "out.definedTasks.add(0,in.nextTask);",
            "",
            "workflow.agileBPM.TaskDef newTask2 = new workflow.agileBPM.TaskDef();",
            "newTask2.setActor(in.addTask.actor);",
            "newTask2.setAssigned(new DateTime());",
            "newTask2.setUntil(ivy.cal.getWorkDayIn(1,new Time()));",
            "newTask2.kind = \"TASK\";",
            "newTask2.description = in.remark;",
            "out.definedTasks.add(0,newTask2);",
            "",
            "out.msg = in.addTask.actor;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 224, "y" : 352 },
        "size" : { "width" : 144, "height" : 60 }
      },
      "connect" : [
        { "id" : "f31", "to" : "f27" }
      ]
    }, {
      "id" : "f29",
      "type" : "HtmlDialogEventStart",
      "name" : "insertTask",
      "config" : {
        "guid" : "14C46CB289D62C1B"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 352 },
        "labelOffset" : { "x" : 11, "y" : 35 }
      },
      "connect" : [
        { "id" : "f30", "to" : "f28" }
      ]
    }, {
      "id" : "f33",
      "type" : "HtmlDialogMethodStart",
      "name" : "deleteTask(TaskDef)",
      "config" : {
        "signature" : "deleteTask",
        "input" : {
          "params" : [
            { "name" : "taskDef", "type" : "workflow.agileBPM.TaskDef", "desc" : "" }
          ],
          "map" : { },
          "code" : [
            "out.definedTasks = out.definedTasks.remove(param.taskDef);",
            "out.msg = param.taskDef.actor;"
          ]
        },
        "guid" : "14C46FC6DC345ABA"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 704 },
        "labelOffset" : { "x" : 15, "y" : 35 }
      },
      "connect" : [
        { "id" : "f42", "to" : "f41" }
      ]
    }, {
      "id" : "f39",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 512, "y" : 704 }
      }
    }, {
      "id" : "f27",
      "type" : "Script",
      "name" : "set historyNote",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.workflow.INote;",
            "",
            "ivy.task.createNote(ivy.session, \"Task for [\"+in.msg+\"] inserted: \"+in.remark);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 392, "y" : 352 }
      },
      "connect" : [
        { "id" : "f32", "to" : "f4", "via" : [ { "x" : 512, "y" : 352 } ] }
      ]
    }, {
      "id" : "f18",
      "type" : "Script",
      "name" : "set historyNote",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.workflow.INote;",
            "",
            "ivy.task.createNote(ivy.session, \"Task appended: [\"+in.msg+\"] \"+in.remark);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 384, "y" : 512 }
      },
      "connect" : [
        { "id" : "f25", "to" : "f24" }
      ]
    }, {
      "id" : "f41",
      "type" : "Script",
      "name" : "set historyNote",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.workflow.INote;",
            "",
            "ivy.task.createNote(ivy.session, \"Pending task deleted: [\"+in.msg+\"]\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 384, "y" : 704 }
      },
      "connect" : [
        { "id" : "f40", "to" : "f39" }
      ]
    } ]
}