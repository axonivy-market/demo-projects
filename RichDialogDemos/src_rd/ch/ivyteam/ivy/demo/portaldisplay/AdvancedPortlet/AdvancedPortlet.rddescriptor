<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<richDialogDescriptor>
    <autoScreenshot>true</autoScreenshot>
    <acceptedBroadcast>
        <name>openConfigurationDialog</name>
        <description></description>
        <attachment>
            <name>portletId</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </acceptedBroadcast>
    <method>
        <name>doRefresh</name>
        <description>This method is required for the refresh of the portlet. Note, that the &#xD;
method is called too after the configuration dialog was saved and the &#xD;
configuration data (see getConfigData and setConfigData) was sent &#xD;
back to the portlet.</description>
    </method>
    <method>
        <name>getConfigData</name>
        <description>This method must return a map filled with the information that the &#xD;
configuration dialog needs. The map will be passed by the portal &#xD;
display to the configuration dialog.</description>
        <outputParameter>
            <name>data</name>
            <description></description>
            <parameterType>java.util.Map</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>setConfigData</name>
        <description>This method receives a map filled with the information from the &#xD;
configuration dialog. Use the map to adapt your portlet to the changed &#xD;
configuration.</description>
        <inputParameter>
            <name>data</name>
            <description></description>
            <parameterType>java.util.Map</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <startMethod>
        <name>start</name>
        <description>Default dialog start method.</description>
    </startMethod>
    <firedEvent>
        <name>openConfigurationDialog</name>
        <description>The event is fired by the portal display. But you must define it in order &#xD;
the display can invoke it properly.</description>
        <scope>SIBLINGS</scope>
        <attachment>
            <name>portletId</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </firedEvent>
    <property>
        <name>guid</name>
        <value>13F6201EBBFC9F99</value>
        <readOnly>true</readOnly>
    </property>
    <property>
        <name>version</name>
        <value>1</value>
        <readOnly>true</readOnly>
    </property>
    <property>
        <name>binary</name>
        <value>false</value>
        <readOnly>true</readOnly>
    </property>
    <property>
        <name>viewTechnology</name>
        <value>ULC</value>
        <readOnly>true</readOnly>
    </property>
</richDialogDescriptor>
